const API = 'http://localhost:3000';
let page = 1;
const limit = 6;
let products = []; // –±—É–¥–µ—Ç –Ω–∞–∫–∞–ø–ª–∏–≤–∞—Ç—å —Ç–æ–≤–∞—Ä—ã —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
let searchTerm = '';

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ (—Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π)
async function fetchProducts() {
  const res = await fetch(`${API}/products?_page=${page}&_limit=${limit}`);
  const data = await res.json();
  products = products.concat(data);
  renderProducts();
  // –°–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ –±–æ–ª—å—à–µ –Ω–µ—á–µ–≥–æ –≥—Ä—É–∑–∏—Ç—å
  if (data.length < limit) {
    document.getElementById('load-more').style.display = 'none';
  }
}

// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫
function renderProducts() {
  const list = document.getElementById('productList');
  list.innerHTML = '';
  const filtered = products.filter(p => p.name.toLowerCase().includes(searchTerm));

  filtered.forEach(p => {
    const li = document.createElement('li');
    li.className = 'product-card';
    li.innerHTML = `
      <img src="${p.image}" alt="${p.name}" />
      <h3>${p.name}</h3>
      <p class="price">${p.price.toLocaleString('uk-UA')}‚Ç¥</p>
      <button class="select-btn" data-id="${p.id}">–í—ã–±—Ä–∞—Ç—å</button>
    `;
    list.appendChild(li);
  });

  // –Ω–∞–≤–µ—Å–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É
  document.querySelectorAll('.select-btn').forEach(btn => {
    btn.addEventListener('click', () => addToCart(btn.dataset.id));
  });
}

// –ü–æ–∫–∞–∑–∞—Ç—å –µ—â—ë
document.getElementById('load-more').addEventListener('click', () => {
  page++;
  fetchProducts();
});

// –ü–æ–∏—Å–∫
document.getElementById('search').addEventListener('input', (e) => {
  searchTerm = e.target.value.toLowerCase();
  renderProducts(); // –Ω–µ —Å–∫—Ä—ã–≤–∞–µ—Ç —Ç–æ–≤–∞—Ä—ã, –ø—Ä–æ—Å—Ç–æ —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç —Ç–µ–∫—É—â–∏–µ
});

// –†–∞–±–æ—Ç–∞ —Å –º–æ–¥–∞–ª–∫–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏/–ª–æ–≥–∏–Ω–∞
function showRegister() {
  document.getElementById('modal-title').innerText = '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è';
  document.getElementById('email').style.display = '';
  document.getElementById('phone').style.display = '';
  document.getElementById('submit-btn').onclick = registerUser;
  document.getElementById('modal-form').classList.remove('hidden');
}

function showLogin() {
  document.getElementById('modal-title').innerText = '–õ–æ–≥–∏–Ω';
  document.getElementById('email').style.display = 'none';
  document.getElementById('phone').style.display = 'none';
  document.getElementById('submit-btn').onclick = loginUser;
  document.getElementById('modal-form').classList.remove('hidden');
}

function closeModal() {
  document.getElementById('modal-form').classList.add('hidden');
}

async function registerUser() {
  const username = document.getElementById('username').value.trim();
  const password = document.getElementById('password').value.trim();
  const email = document.getElementById('email').value.trim();
  const phone = document.getElementById('phone').value.trim();

  if (!username || !password || !email || !phone) {
    alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!');
    return;
  }

  const check = await fetch(`${API}/users?username=${encodeURIComponent(username)}`);
  const users = await check.json();
  if (users.length > 0) {
    alert('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!');
    return;
  }

  const res = await fetch(`${API}/users`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ username, password, email, phone })
  });
  if (res.ok) {
    alert('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!');
    showLogin();
  } else {
    alert('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
  }
}

async function loginUser() {
  const username = document.getElementById('username').value.trim();
  const password = document.getElementById('password').value.trim();

  const res = await fetch(`${API}/users?username=${encodeURIComponent(username)}&password=${encodeURIComponent(password)}`);
  const data = await res.json();

  if (Array.isArray(data) && data.length > 0) {
    localStorage.setItem('user', JSON.stringify(data[0]));
    alert(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${username}!`);
    closeModal();
    applyUserSession();
  } else {
    alert('–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!');
  }
}

function applyUserSession() {
  const user = JSON.parse(localStorage.getItem('user'));
  const authButtons = document.getElementById('auth-buttons');
  if (user) {
    authButtons.innerHTML = `<p>üëã –ü—Ä–∏–≤–µ—Ç, ${user.username}! <button onclick="logout()">–í—ã—Ö–æ–¥</button></p>`;
  }
}

function logout() {
  localStorage.removeItem('user');
  document.getElementById('auth-buttons').innerHTML = `
    <button onclick="showRegister()">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</button>
    <button onclick="showLogin()">–õ–æ–≥–∏–Ω</button>
  `;
}

// –ö–æ—Ä–∑–∏–Ω–∞
function addToCart(productId) {
  const cart = JSON.parse(localStorage.getItem('cart')) || [];
  // –ù–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä –≤ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ
  const product = products.find(p => String(p.id) === String(productId));
  if (!product) return;
  const idx = cart.findIndex(i => String(i.id) == String(productId));
  if (idx > -1) {
    cart[idx].quantity += 1;
  } else {
    cart.push({ id: product.id, name: product.name, price: product.price, image: product.image, quantity: 1 });
  }
  localStorage.setItem('cart', JSON.stringify(cart));
  // –í–∏–∑—É–∞–ª—å–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
  alert('–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É');
}

// –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
function checkLogin() {
  const user = localStorage.getItem('user');
  if (user) applyUserSession();
}

checkLogin();
fetchProducts();
